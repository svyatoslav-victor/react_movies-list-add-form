{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","newTitle","newDescription","newImgUrl","newImdbUrl","newImdbId","formErrors","isTitleValid","isImgUrlValid","isImdbUrlValid","isImdbIdValid","regExp","handleChange","event","target","name","value","setState","checkForErrors","match","handleClick","props","onAdd","this","isAllDataValid","onSubmit","preventDefault","type","autoComplete","placeholder","onChange","onBlur","hidden","rows","disabled","onClick","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce79031b.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { Component, FocusEvent } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\ntype State = {\n  newTitle: string,\n  newDescription: '',\n  newImgUrl: string,\n  newImdbUrl: string,\n  newImdbId: string,\n  formErrors: {\n    isTitleValid: boolean,\n    isImgUrlValid: boolean,\n    isImdbUrlValid: boolean,\n    isImdbIdValid: boolean,\n  }\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    newTitle: '',\n    newDescription: '',\n    newImgUrl: '',\n    newImdbUrl: '',\n    newImdbId: '',\n    formErrors: {\n      isTitleValid: true,\n      isImgUrlValid: true,\n      isImdbUrlValid: true,\n      isImdbIdValid: true,\n    },\n  };\n\n  regExp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n  handleChange = (event: { target: { name: string, value: string } }) => {\n    const { name, value } = event.target;\n\n    this.setState(state => ({\n      ...state,\n      [name]: value,\n      formErrors: {\n        ...state.formErrors,\n        isTitleValid: true,\n        isImgUrlValid: true,\n        isImdbUrlValid: true,\n        isImdbIdValid: true,\n      },\n    }));\n  };\n\n  checkForErrors = (event: FocusEvent<HTMLInputElement>) => {\n    if (event.target.name === 'newTitle' && !event.target.value) {\n      this.setState(state => ({\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          isTitleValid: false,\n        },\n      }));\n    }\n\n    if (event.target.name === 'newImgUrl' && !event.target.value.match(this.regExp)) {\n      this.setState(state => ({\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          isImgUrlValid: false,\n        },\n      }));\n    }\n\n    if (event.target.name === 'newImdbUrl' && !event.target.value.match(this.regExp)) {\n      this.setState(state => ({\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          isImdbUrlValid: false,\n        },\n      }));\n    }\n\n    if (event.target.name === 'newImdbId' && !event.target.value) {\n      this.setState(state => ({\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          isImdbIdValid: false,\n        },\n      }));\n    }\n  };\n\n  handleClick = () => {\n    const {\n      newTitle,\n      newDescription,\n      newImgUrl,\n      newImdbUrl,\n      newImdbId,\n    } = this.state;\n\n    const movie = {\n      title: newTitle,\n      description: newDescription,\n      imgUrl: newImgUrl,\n      imdbUrl: newImdbUrl,\n      imdbId: newImdbId,\n    };\n\n    this.props.onAdd(movie);\n\n    this.setState({\n      newTitle: '',\n      newDescription: '',\n      newImgUrl: '',\n      newImdbUrl: '',\n      newImdbId: '',\n    });\n  };\n\n  render() {\n    const {\n      newTitle,\n      newDescription,\n      newImgUrl,\n      newImdbUrl,\n      newImdbId,\n    } = this.state;\n\n    const {\n      isTitleValid,\n      isImgUrlValid,\n      isImdbUrlValid,\n      isImdbIdValid,\n    } = this.state.formErrors;\n\n    const isAllDataValid = newTitle\n      && newImgUrl.match(this.regExp)\n      && newImdbUrl.match(this.regExp)\n      && newImdbId;\n\n    return (\n      <form\n        className=\"Add_Movie\"\n        onSubmit={(event) => event.preventDefault()}\n      >\n        <p>Title</p>\n        <input\n          type=\"text\"\n          name=\"newTitle\"\n          value={newTitle}\n          autoComplete=\"off\"\n          placeholder=\"Enter Movie Title\"\n          className={isTitleValid ? 'Add_Movie__card' : 'Add_Movie__card--error'}\n          onChange={this.handleChange}\n          onBlur={this.checkForErrors}\n        />\n        <div\n          className=\"Error_Container\"\n        >\n          <p\n            className=\"Error_Container--message\"\n            hidden={isTitleValid}\n          >\n            Enter Correct Info\n          </p>\n        </div>\n        <p>Description</p>\n        <textarea\n          rows={3}\n          name=\"newDescription\"\n          value={newDescription}\n          autoComplete=\"off\"\n          placeholder=\"Enter Movie Description\"\n          className=\"Add_Movie__card card-description\"\n          onChange={this.handleChange}\n        />\n        <p>Image</p>\n        <input\n          type=\"text\"\n          name=\"newImgUrl\"\n          value={newImgUrl}\n          autoComplete=\"off\"\n          placeholder=\"Enter Image URL\"\n          className={isImgUrlValid ? 'Add_Movie__card' : 'Add_Movie__card--error'}\n          onChange={this.handleChange}\n          onBlur={this.checkForErrors}\n        />\n        <div\n          className=\"Error_Container\"\n        >\n          <p\n            className=\"Error_Container--message\"\n            hidden={isImgUrlValid}\n          >\n            Enter Correct Info\n          </p>\n        </div>\n        <p>IMDB URL</p>\n        <input\n          type=\"text\"\n          name=\"newImdbUrl\"\n          value={newImdbUrl}\n          autoComplete=\"off\"\n          placeholder=\"Enter IMDB URL\"\n          className={isImdbUrlValid ? 'Add_Movie__card' : 'Add_Movie__card--error'}\n          onChange={this.handleChange}\n          onBlur={this.checkForErrors}\n        />\n        <div\n          className=\"Error_Container\"\n        >\n          <p\n            className=\"Error_Container--message\"\n            hidden={isImdbUrlValid}\n          >\n            Enter Correct Info\n          </p>\n        </div>\n        <p>IMDB ID</p>\n        <input\n          type=\"text\"\n          name=\"newImdbId\"\n          value={newImdbId}\n          autoComplete=\"off\"\n          placeholder=\"Enter IMDB ID\"\n          className={isImdbIdValid ? 'Add_Movie__card' : 'Add_Movie__card--error'}\n          onChange={this.handleChange}\n          onBlur={this.checkForErrors}\n        />\n        <div\n          className=\"Error_Container\"\n        >\n          <p\n            className=\"Error_Container--message\"\n            hidden={isImdbIdValid}\n          >\n            Enter Correct Info\n          </p>\n        </div>\n        <button\n          type=\"button\"\n          disabled={!isAllDataValid}\n          onClick={this.handleClick}\n        >\n          Add New Movie\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <h1>New Movie Form</h1>\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}